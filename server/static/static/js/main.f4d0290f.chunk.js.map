{"version":3,"sources":["components/machine-card/styles.module.scss","components/shell/styles.module.scss","components/taskbar/styles.module.scss","App.module.scss","components/line-graph/index.js","components/machine-card/index.js","components/shell/index.js","components/taskbar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LineGraph","props","state","config","points","viewBox","this","xMin","yMin","xMax","yMax","point","x","y","width","height","style","background","backgroundColor","id","patternUnits","d","fill","stroke","gridColor","strokeWidth","lineColor","React","Component","MachineCard","openShell","window","addShell","name","parseSocketMessage","event","Promise","resolve","_","data","Blob","reader","FileReader","onload","result","readAsText","memmory","cpu","shell","shellRef","shellVisible","_this","ws","WebSocket","onmessage","message","set","obj","JSON","parse","val","parseInt","push","length","slice","setState","memory","parseFloat","toFixed","onopen","send","stringify","Object","assign","map","_x","i","className","styles","horizontalLine","verticalLines","onClick","display","closeShell","ref","Shell","minimize","open","terminal","Terminal","current","then","write","onKey","e","key","TaskBar","shells","filter","console","log","createRef","Math","random","App","machines","fetch","res","json","machineCards","Boolean","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4d0290f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"machine-card\":\"styles_machine-card__1duPV\",\"bottom\":\"styles_bottom__1U_BQ\",\"details\":\"styles_details__1Igfz\",\"machine-name\":\"styles_machine-name__bn44c\",\"footer\":\"styles_footer__12H9L\",\"box\":\"styles_box__2nOHi\",\"actions\":\"styles_actions__1CfTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"terminal-modal-window\":\"styles_terminal-modal-window__3wdC-\",\"menu\":\"styles_menu__3y0pB\",\"open\":\"styles_open__1crG0\",\"title\":\"styles_title__3MEDx\",\"actions\":\"styles_actions__20PZp\",\"action\":\"styles_action__UsJXo\",\"terminal\":\"styles_terminal__1eTtd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskbar\":\"styles_taskbar__23gA5\",\"tabs\":\"styles_tabs__1LhQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","import React from 'react';\n\nclass LineGraph extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = this.props.config;\n\t}\n\n\tcomponentDidMount(){\n\t}\n\n\trender(){\n\t\tvar points = \"\";\n\t\tvar viewBox = this.props.xMin+\" \"+this.props.yMin+\" \"+this.props.xMax+\" \"+this.props.yMax;\n\t\tfor(var point of this.props.points){\n\t\t\tpoints += point.x+\",\"+point.y+\" \"\n\t\t}\n\t\treturn (\n\t\t\t<svg viewBox={viewBox} width={\"100%\"} height=\"100%\" style={{background: (this.props.backgroundColor || \"white\")}}>\n\t\t\t\t<defs>\n\t\t\t\t\t<pattern id=\"smallGrid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n\t\t\t\t\t\t<path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke={this.props.gridColor || \"gray\"} strokeWidth=\"0.5\"/>\n\t\t\t\t\t</pattern>\n\t\t\t\t</defs>\n\t\t\t\t<rect width=\"100%\" height=\"100%\" fill=\"url(#smallGrid)\" />\n\t\t\t\t<polyline\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke={this.props.lineColor || \"#0074d9\"}\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tpoints={points}/>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport default LineGraph;\n","import React from 'react';\nimport styles from './styles.module.scss'; \nimport LineGraph from 'components/line-graph';\n\nimport { Terminal } from 'xterm/lib/xterm';\nimport 'xterm/css/xterm.css';\n\nclass MachineCard extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata:[],\n\t\t\tmemmory: 0,\n\t\t\tcpu: 0,\n\t\t\tshell: false,\n\t\t\tshellRef: null,\n\t\t\tshellVisible: false\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tvar _this = this;\n\t\tvar ws = new WebSocket(\"ws://127.0.0.1:8081\");\n\t\tws.onmessage = function(message){\n\t\t\tvar set = _this.state.data\n\t\t\tvar obj = JSON.parse(message.data);\n\t\t\tvar val = parseInt(obj['cpuUsage']);\n\t\t\tset.push(val)\n\t\t\tif(set.length>11) set = set.slice(1)\n\t\t\t_this.setState({data: set, memory: parseFloat(obj['memUsage']).toFixed(0), cpu: val});\n\t\t}\n\t\tws.onopen = function(){\n\t\t\tws.send(JSON.stringify({\"name\": _this.props.config.name}));\n\t\t\tws.send(JSON.stringify({\"service\": \"monitor\"}));\n\t\t}\n\t}\n\n\topenShell = ()=>{\n\t\twindow.addShell(this.props.config.name)\n\t}\n\n\tparseSocketMessage = (event)=>{\n\t\treturn new Promise((resolve, _)=>{\n\t\t\tif (event.data instanceof Blob) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tresolve(reader.result);\n\t\t\t\t};\n\t\t\n\t\t\t\treader.readAsText(event.data);\n\t\t\t} else {\n\t\t\t\tresolve(event.data);\n\t\t\t}\n\t\t})\n\t}\n\n\trender(){\n\t\tvar data = Object.assign(this.state.data);\n\t\tvar points = data.map((_x,i)=>{\n\t\t\treturn {x: 200-((10-i)*20), y:100-(_x)}\n\t\t})\n\t\treturn (\n\t\t\t<div className={styles['machine-card']}>\n\t\t\t\t<div style={{width: \"300px\", height: \"150px\"}}>\n\t\t\t\t\t<LineGraph xMin={0} xMax={201} yMin={0} yMax={101} points={points} horizontalLine={1} verticalLines={1}\n\t\t\t\t\t\tbackgroundColor=\"white\" gridColor=\"green\" lineColor=\"purple\"/><br/>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles['bottom']}>\n\t\t\t\t\t<div className={styles['details']}>\n\t\t\t\t\t\t<span className={styles['machine-name']}><i className=\"fas fa-server\"></i> {this.props.config.name}</span>\n\t\t\t\t\t\t<div className={styles['footer']}>\n\t\t\t\t\t\t\t<div className={styles['machine-stats']}>\n\t\t\t\t\t\t\t\t<span><i className=\"fas fa-desktop\"></i> {this.state['cpu']}%</span>\n\t\t\t\t\t\t\t\t<span><i className=\"fas fa-microchip\"></i> {this.state['memory']}%</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles['actions']}>\n\t\t\t\t\t\t<span onClick={this.openShell} className={styles['box']}><i className=\"fas fa-scroll\"></i></span>\n\t\t\t\t\t\t<span onClick={this.openShell} className={styles['box']}><i className=\"fas fa-terminal\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{this.state.shell && (\n\t\t\t\t\t<div className={styles['terminal-modal']} style={{display: (this.state.shellVisible?'block':'none')}}>\n\t\t\t\t\t\t<div className={styles['terminal-modal-window']}>\n\t\t\t\t\t\t\t<span onClick={this.closeShell} className={styles['close']}><i className=\"fas fa-times\"></i></span>\n\t\t\t\t\t\t\t<div ref={this.state.shellRef}></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MachineCard;\n","import React from 'react';\nimport styles from './styles.module.scss'; \n\nimport { Terminal } from 'xterm/lib/xterm';\nimport 'xterm/css/xterm.css';\n\nclass Shell extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: this.props.name,\n\t\t\tshellRef: this.props.shellRef,\n\t\t\topen: true\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tvar _this = this;\n\t\tthis.setState({shellVisible: true},()=>{\n\t\t\tvar terminal = new Terminal();\n\t\t\tterminal.open(this.state.shellRef.current);\n\t\t\tvar ws = new WebSocket(\"ws://127.0.0.1:8081\");\n\t\t\tws.onmessage = function(event){\n\t\t\t\t_this.parseSocketMessage(event)\n\t\t\t\t.then((result)=>{\n\t\t\t\t\tterminal.write(result);\n\t\t\t\t})\n\t\t\t}\n\t\t\tws.onopen = function(){\n\t\t\t\tws.send(JSON.stringify({\"name\": _this.props.name}));\n\t\t\t\tws.send(JSON.stringify({\"service\": \"shell\"}));\n\t\t\t\tterminal.onKey((e)=>{\n\t\t\t\t\tws.send(e.key);\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tminimize = ()=>{\n\t\tthis.setState({open: !this.state.open})\n\t}\n\n\tparseSocketMessage = (event)=>{\n\t\treturn new Promise((resolve, _)=>{\n\t\t\tif (event.data instanceof Blob) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tresolve(reader.result);\n\t\t\t\t};\n\t\t\n\t\t\t\treader.readAsText(event.data);\n\t\t\t} else {\n\t\t\t\tresolve(event.data);\n\t\t\t}\n\t\t})\n\t}\n\n\trender(){\n\t\treturn (\n                <div className={styles['terminal-modal-window']}>\n\t\t\t\t\t<div className={styles[\"menu\"] + \" \" + (this.state.open?styles[\"open\"]:\"\")}>\n\t\t\t\t\t\t<div className={styles[\"title\"]}>{this.state.name}</div>\n\t\t\t\t\t\t<div className={styles[\"actions\"]}>\n                    \t\t<span onClick={this.minimize} className={styles['action']}><i className=\"fas fa-minus\"></i></span>\n                    \t\t<span onClick={this.props.closeShell} className={styles['action']}><i className=\"fas fa-times\"></i></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                    <div style={{display: (this.state.open?\"block\":\"none\")}} className={styles[\"terminal\"]} ref={this.state.shellRef}></div>\n                </div>\n\t\t);\n\t}\n}\n\nexport default Shell;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './styles.module.scss'; \n\nimport Shell from 'components/shell';\nimport 'xterm/css/xterm.css';\n\nclass TaskBar extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n            shells: []\n\t\t}\n    }\n    componentDidMount(){\n        window.addShell = (name)=>{\n            var shells = Object.assign(this.state.shells);\n            shells.push({\n                name: 'local',\n                shellRef: React.createRef(), \n                key: Math.random()*100\n            })\n            this.setState({\n                shells: shells\n            })\n        }\n    }\n\n    closeShell = (ref)=>()=>{\n        var shells = Object.assign(this.state.shells)\n        shells = shells.filter(x=>{\n            console.log(x.shellRef, ref)\n            return (x.shellRef != ref)\n        })\n        this.setState({shells: shells})\n    }\n\n\trender(){\n        var shells = this.state.shells.map((x)=>{\n            return (<Shell key={x.key} shellRef={x.shellRef} name={x.name} closeShell={this.closeShell(x.shellRef)}/>)\n        })\n\t\treturn (\n            <div className={styles[\"taskbar\"]}>\n                <div className={styles[\"tabs\"]}>\n                    {shells}\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default TaskBar;\n","import React from 'react';\nimport styles from './App.module.scss';\n\nimport MachineCard from './components/machine-card/index.js';\nimport TaskBar from './components/taskbar/index.js';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {machines: []}\n  }\n\n  componentDidMount(){\n    fetch(\"/api/machines\")\n    .then(res=>{\n      return res.json();\n    })\n    .then((res)=>{\n      this.setState({machines: res});\n    })\n  }\n\n  render(){\n    var machineCards = this.state.machines.map((x, i)=>(<MachineCard config={x} key={i} />));\n\n    return (\n      <div className={styles[\"App\"]}>\n        {machineCards}\n        <TaskBar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}